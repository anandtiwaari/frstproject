{"version":3,"sources":["components/Naya.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Naya","props","className","mode","style","color","href","type","id","onClick","toggleMode","for","modenew","TextForm","useState","variab","badlega","headings","backgroundColor","cursor","rows","onChange","event","target","value","disabled","length","toUpperCase","toLowerCase","textcopy","document","querySelector","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","filter","element","App","darkva","setdarkva","kadak","setkadak","gajab","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"8LAEaA,EAAO,SAACC,GACjB,OACI,mCACI,qBACCC,UAAS,yCAAoCD,EAAME,KAA1C,eAAqDF,EAAME,KAA3D,KADV,SAIV,sBAAKD,UAAU,kBAAkBE,MAAO,CAACC,MAAmB,UAAbJ,EAAME,KAAe,QAAQ,SAA5E,UACE,mBAAGD,UAAU,eAAeI,KAAK,IAAjC,qBACA,wBAAQJ,UAAU,iBAAiBK,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAA5L,SACE,sBAAML,UAAU,0BAElB,sBAAKA,UAAU,2BAA2BM,GAAG,yBAA7C,UACE,qBAAIN,UAAU,kCAAkCE,MAAO,CAACC,MAAmB,UAAbJ,EAAME,KAAe,QAAQ,SAA3F,UACE,oBAAID,UAAU,WAAd,SACE,mBAAGA,UAAU,kBAAkB,eAAa,OAAQI,KAAK,IAAzD,oBAEF,oBAAIJ,UAAU,aAGd,oBAAIA,UAAU,gBAWhB,sBAAMA,UAAU,SAAhB,SAOA,sBAAKA,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAA3E,UACJ,uBAAOD,UAAU,mBAAmBK,KAAK,WAAWE,QAASR,EAAMS,WAAYF,GAAG,2BAClF,uBAAON,UAAU,mBAAmBS,IAAI,yBAAyBP,MAAO,CAACC,MAAmB,UAAbJ,EAAME,KAAe,QAAQ,SAA5G,SAAuHF,EAAMW,0BCxClHC,EAAU,SAACZ,GA6BpB,IAgBA,EAAuBa,mBAAS,IAAhC,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OAEI,sBACAZ,MAAO,CAACC,MAAmB,UAAbJ,EAAME,KAAe,QAAQ,SAD3C,UAMI,6BAEGF,EAAMgB,WACT,qBAAKf,UAAU,SAI3B,qBAAKA,UAAU,OAAf,SAIE,0BAAUA,UAAU,oBACpBE,MAAO,CAACc,gBAA6B,UAAbjB,EAAME,KAAe,QAAQ,OACrDE,MAAmB,UAAbJ,EAAME,KAAe,QAAQ,QACnCgB,OAAO,WAGPX,GAAG,8BAA8BY,KAAK,KAAKC,SA7E1B,SAACC,GACZN,EAAQM,EAAMC,OAAOC,QA4EoCA,MAAOT,MAExE,wBAAQb,UAAU,uBAAuBuB,SAA0B,IAAhBV,EAAOW,OAAejB,QA3DrE,WAEIO,EAAQD,EAAOY,gBAyDvB,iCACA,wBAAQzB,UAAU,uBAAuBuB,SAA0B,IAAhBV,EAAOW,OAAajB,QAxDnE,WAEIO,EAAQD,EAAOa,gBAsDvB,iCACA,wBAAQ1B,UAAU,uBAAuBuB,SAA0B,IAAhBV,EAAOW,OAAajB,QArDlD,WAERO,EAAQ,KAmDrB,mBACA,wBAAQd,UAAU,uBAAuBuB,SAA0B,IAAhBV,EAAOW,OAAajB,QAlDlD,WACb,IAAKoB,EAASC,SAASC,cAAc,SACrCF,EAASG,SACTC,UAAUC,UAAUC,UAAUN,EAASL,OACvCM,SAASM,eAAeC,mBA8ChC,sBAEA,8BAAItB,EAAOuB,MAAM,KAAKC,QAAO,SAACC,GAAW,OAAwB,IAAjBA,EAAQd,UAAaA,OAArE,eAAyFX,EAAOW,OAAhG,kBACA,yCACA,4BAAIX,QCKW0B,MArEf,WACE,MAA4B3B,mBAAS,SAArC,mBAAO4B,EAAP,KAAeC,EAAf,KAEA,EAA0B7B,mBAAS,oBAAnC,mBAAO8B,EAAP,KAAcC,EAAd,KA+BA,OAGE,cADA,CACA,sBAGA,cAAC,EAAD,CAAMC,MAAM,+BAA+BlC,QAASgC,EAAQlC,WApC/C,WACH,UAATgC,GACDC,EAAU,QACVb,SAASiB,KAAK3C,MAAMc,gBAAgB,UACpC2B,EAAS,uBAETF,EAAU,SACVb,SAASiB,KAAK3C,MAAMc,gBAAgB,QACpC2B,EAAS,sBA4B2E1C,KAAMuC,IAE1F,qBAAKxC,UAAU,YAAf,SACM,cAAC,EAAD,CAAUe,SAAS,sBAAsBL,QAASgC,EAAOzC,KAAMuC,UCxD1DM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAAS8B,eAAe,SAM1BZ,K","file":"static/js/main.6a8a79bd.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link} from 'react-router-dom'\r\nexport const Naya = (props) => {\r\n    return (\r\n        < >\r\n            <nav \r\n             className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} `}\r\n            //  style={{color:props.modenew===\"light\"?\"black\":\"white\",backgroundColor:props.modenew===\"light\"?\"danger\":\"light\"}}\r\n             >\r\n  <div className=\"container-fluid\" style={{color:props.mode===\"light\"?\"black\":\"white\"}}>\r\n    <a className=\"navbar-brand\" href='#' >newProj</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\" style={{color:props.mode===\"light\"?\"black\":\"white\"}}>\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\"  href=\"#\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <a className=\"nav-link active\" aria-current=\"page\"  href=\"/\">About</a> */}\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to='/' >{props.gajab}</Link> */}\r\n        </li>\r\n      </ul>\r\n      {/* <h1 style={{\r\n    border:'2px solid red',\r\n    padding:'12px',\r\n    borderRadius:'50%',\r\n    marginRight:'35px',\r\n    backgroundColor:'red'\r\n  }}> </h1> */}\r\n      <form className=\"d-flex\">\r\n        {/* my color mode  */}\r\n      {/* <div className={`form-check form-switch text-${props.modenew==='light'?'dark':'white'}`}  >\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleModenew} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" style={{color:props.modenew===\"light\"?\"black\":\"white\"}} for=\"flexSwitchCheckDefault \">Enable saare Mode</label>\r\n</div> */}\r\n\r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}  >\r\n  <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\" style={{color:props.mode===\"light\"?\"black\":\"white\"}}>{props.modenew}</label>\r\n</div>\r\n        {/* <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button> */}\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n            {/* <h1>kadak bann laala</h1> */}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\nexport const TextForm =(props) => {\r\n    const chnageho=(event)=>{\r\n        badlega(event.target.value)\r\n    }\r\n    // const EnableMode=()=>{\r\n        \r\n    //     if(stylis.color==='white'){\r\n    //         setstylis({\r\n    //             color:'black',\r\n    //     backgroundColor:'white'\r\n    //         })\r\n    //         setmodes(\"Enable Dark Mode\")\r\n    //         // stylis.backgroundColor='white'\r\n    //     }else{\r\n    //         setstylis({\r\n    //             color:'white',\r\n    //     backgroundColor:'black'\r\n    //         })\r\n    //         setmodes(\"Enable Light Mode\")\r\n    //     }\r\n    // }\r\n    function upperclick(){\r\n        // console.log(\"ye shaam mastani madhoshh kiye jaaye\")\r\n        badlega(variab.toUpperCase())   \r\n    }\r\n    function lowerclick(){\r\n        // console.log(\"ye shaam mastani madhoshh kiye jaaye\")\r\n        badlega(variab.toLowerCase())       \r\n    }\r\n    const clearclick=()=>{\r\n        // let clear='';\r\n             badlega('')\r\n    }\r\n    const CopyHandle=()=>{\r\n        let  textcopy=document.querySelector('.alag')\r\n        textcopy.select()\r\n        navigator.clipboard.writeText(textcopy.value)\r\n        document.getSelection().removeAllRanges()\r\n        // alert(\"Text Copied\")\r\n        \r\n    }\r\n\r\n\r\n    // states \r\n    \r\n    const [variab,badlega]=useState(\"\")\r\n    // const [modes,setmodes]=useState(\"Enable Light Mode\")\r\n    // const [stylis,setstylis]=useState({\r\n    //     color:'white',\r\n    //     backgroundColor:'black'\r\n    // })\r\n\r\n\r\n    return (\r\n        \r\n        <div \r\n        style={{color:props.mode==='light'?'black':'white'}}\r\n            \r\n        // style={{color:props.modenew==='light'?'black':'white'}}    \r\n        //  style={stylis} \r\n         >\r\n            <h1 \r\n            // style={{color:props.mode==='light'?'black':'white'}}\r\n             >{props.headings}</h1>\r\n            <div className=\"mb-3\">\r\n  {/* <label for=\"exampleFormControlInput1\" className=\"form-label\">Email address</label>\r\n  <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\"/> */}\r\n</div>\r\n<div className=\"mb-3\" \r\n// style={stylis}\r\n >\r\n  {/* <label for=\"exampleFormControlTextarea1\" className=\"form-label\">Example textarea</label> */}\r\n  <textarea className=\"form-control alag\" \r\n  style={{backgroundColor:props.mode==='light'?'white':'grey',\r\n  color:props.mode==='light'?'black':'white',\r\n  cursor:'pointer',\r\n}}\r\n//   style={stylis} \r\n  id=\"exampleFormControlTextarea1\" rows=\"10\" onChange={chnageho} value={variab}  ></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-1\" disabled={variab.length===0}    onClick={upperclick}>Convert ToUpperCase</button>\r\n<button className=\"btn btn-primary mx-1\" disabled={variab.length===0}  onClick={lowerclick}>Convert ToLowerCase</button>\r\n<button className=\"btn btn-primary mx-1\" disabled={variab.length===0}  onClick={clearclick}>Clear</button>\r\n<button className=\"btn btn-primary mx-1\" disabled={variab.length===0}  onClick={CopyHandle}>CopyText</button>\r\n{/* <button className=\"btn btn-primary mx-1\"   onClick={EnableMode}>{modes}</button> */}\r\n<p>{variab.split(\" \").filter((element)=>{return element.length!==0}).length} Words and  {variab.length} characteres</p>\r\n<h1>Preview</h1>\r\n<p>{variab}</p>\r\n{/* <button className=\"btn\">{modes}</button> */}\r\n        </div>\r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react'\n\n// import { useState } from 'react';\n// import { About } from './components/About';\nimport { Naya } from './components/Naya';\nimport { TextForm } from './components/TextForm';\n// import { Alert } from './components/Alert';\n// import React from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n// import {Calculate} from './components/Calculate'\n// import { Imageva } from './components/Imageva';\n// import { Counter } from './components/Counter';\n// import {Naya} from './components/Naya'\n// import './Naya';\n// import { Naya } from './Naya';\n\n// let source=\"https://source.unsplash.com/random\";\n// let kaisa=\"boht sahi\";\nfunction App() {\n  const [darkva, setdarkva] = useState(\"light\")\n  //my newmode\n  const [kadak, setkadak] = useState(\"Enable Dark Mode\")\nconst toggleMode=()=>{\n  if(darkva==='light'){\n    setdarkva(\"dark\")\n    document.body.style.backgroundColor=\"#0c0834\"\n    setkadak(\"Enable Light Mode\")\n  }else{\n    setdarkva(\"light\")\n    document.body.style.backgroundColor=\"white\"\n    setkadak(\"Enable Dark Mode\")\n  }\n  // setInterval(() => {\n  //   document.title=\"install karro\"\n  // }, 1000);\n  // setInterval(() => {\n  //   document.title=\"please install karro\"\n  // }, 1000);\n \n}\n\n// const toggleModenew=()=>{\n//   // #e25764\n//   if(kadak==='light'){\n//     setkadak(\"danger\")\n//     document.body.style.backgroundColor=\"#539753\"\n//   }else{\n//     setkadak(\"light\")\n//     document.body.style.backgroundColor=\"white\"\n//   }\n \n// }\n  return (\n   \n    // <div className=\"container\">\n    < >\n        {/* <Router> */}\n\n    <Naya gajab=\"ekk number lala maujj kardii\" modenew={kadak}  toggleMode={toggleMode} mode={darkva} />\n    {/* <Alert alert=\"kaam karre chhe\" /> */}\n    <div className=\"container\">\n          <TextForm headings=\"Enter the Text here\" modenew={kadak} mode={darkva} />\n            {/* <About /> */}\n    {/* <TextForm headings=\"Enter the Text here\" modenew={kadak} mode={darkva} /> */}\n    {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n          {/* </Route> */}\n          \n          {/* <Route exact path=\"/\"> */}\n          {/* </Route> */}\n        {/* </Switch> */}\n        \n    {/* <About/> */}\n    {/* <Calculate/> */}\n    {/* <Imageva/> */}\n    {/* <Counter/> */}\n    </div>\n    {/* </Router> */}\n\n\n</>\n    // </div>\n    \n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}